<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Products | Admin</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="flex">

    <%- include('../partials/sidebar') %>

    <main class="flex-1 p-8 ml-64 bg-gray-50">
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-2xl font-bold">Products Detail</h2>
            <a href="/admin/products/add"
    class="bg-emerald-800 text-white px-5 py-2 rounded hover:bg-emerald-900 transition">
    Add New Product
</a>

        </div>

        <!-- Search Bar -->
    <form action="/admin/products" method="get" class="flex items-center mb-6 gap-3">
  <input 
    type="text" 
    name="q" 
    value="<%= q || '' %>" 
    placeholder="Search Products..."
    class="border border-gray-300 rounded-md px-3 py-2 w-64 focus:outline-none focus:ring-2 focus:ring-emerald-700"
  />
  <button type="submit" class="bg-emerald-800 text-white px-4 py-2 rounded hover:bg-emerald-900">
    Search
  </button>
  <a href="/admin/products" class="bg-gray-400 text-white px-4 py-2 rounded hover:bg-gray-500">
    Clear
  </a>
</form>



        <div class="overflow-x-auto rounded-xl shadow-sm border border-gray-200">
            <table class="min-w-full text-left text-gray-700">
                <thead class="bg-gray-100 text-sm font-semibold">
                    <tr>
                        <th class="px-6 py-3">productName</th>
                        <th class="px-6 py-3">Brand</th>
                        <th class="px-6 py-3">Category</th>
                        <th class="px-6 py-3">Price</th>
                        <th class="px-6 py-3">Stock</th>
                        <th class="px-6 py-3">Status</th>
                        <th class="px-6 py-3 text-center">Action</th>
                    </tr>
                </thead>
                <tbody>
                    <% products.forEach(product => { %>
                        <tr class="border-t hover:bg-gray-50">
                            <td class="px-6 py-3"><%= product.name %></td>
                            <td class="px-6 py-3"><%= product.brand %></td>
                            <td class="px-6 py-3"><%= product.category ? product.category.name : '-' %></td>
                            <td class="px-6 py-3">
                                <% const price = (product.variants && product.variants.length) ? product.variants[0].price : '-'; %>
                                <%= price %>
                            </td>
                            <td class="px-6 py-3">
                                <% const stock = (product.variants || []).reduce((s, v) => s + (v.stock || 0), 0); %>
                                <%= stock %>
                            </td>
                            <td class="px-6 py-3">
  <span class="font-medium <%= product.isDeleted ? 'text-gray-500' : (product.isActive ? 'text-green-600' : 'text-red-600') %>">
    <%= product.isDeleted ? 'Deleted' : (product.isActive ? 'Active' : 'Inactive') %>
  </span>
</td>

<td class="px-6 py-3 flex gap-2 justify-center">
  <a href="/admin/products/edit/<%= product._id %>"
    class="bg-emerald-800 text-white px-4 py-1 rounded hover:bg-emerald-900">
    Edit
  </a>

  <% if (!product.isDeleted) { %>
    <button
      onclick="toggleProductStatus('<%= product._id %>', <%= product.isActive %>)"
      class="<%= product.isActive ? 'bg-yellow-600 hover:bg-yellow-700' : 'bg-green-600 hover:bg-green-700' %> text-white px-4 py-1 rounded">
      <%= product.isActive ? 'Block' : 'Unblock' %>
    </button>
  <% } %>


</td>

                        
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    <!-- Pagination -->
<% if (totalPages > 1) { %>
  <div class="flex justify-center items-center gap-2 mt-6">
    <% if (page > 1) { %>
      <a 
        href="?page=<%= page - 1 %>&q=<%= q || '' %>" 
        class="px-3 py-1 border rounded bg-gray-200 hover:bg-gray-300">Previous</a>
    <% } %>

    <% for (let i = 1; i <= totalPages; i++) { %>
      <a 
        href="?page=<%= i %>&q=<%= q || '' %>" 
        class="px-3 py-1 border rounded <%= i === page ? 'bg-emerald-700 text-white' : 'bg-gray-100 hover:bg-gray-200' %>">
        <%= i %>
      </a>
    <% } %>

    <% if (page < totalPages) { %>
      <a 
        href="?page=<%= page + 1 %>&q=<%= q || '' %>" 
        class="px-3 py-1 border rounded bg-gray-200 hover:bg-gray-300">Next</a>
    <% } %>
  </div>
<% } %>

    </main>


    <!-- // ------------------------------------
    // 1. TOGGLE STATUS (Block/Unblock)
    // ------------------------------------ -->
   <script>
function toggleProductStatus(id, isActive) {
    const action = isActive ? 'block' : 'unblock';

    Swal.fire({
        title: `Are you sure you want to ${action} this product?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: `Yes, ${action}!`
    }).then((result) => {
        if (result.isConfirmed) {
            // ✅ Disable all buttons to prevent double-clicks
            document.querySelectorAll('button').forEach(btn => btn.disabled = true);

            fetch(`/admin/products/toggle-status/${id}`, { method: 'POST' })
                .then(async res => {
                    const data = await res.json();

                    if (!res.ok) throw new Error(data.message || 'Request failed');

                    Swal.fire({
                        title: data.message,
                        icon: 'success',
                        timer: 1500,
                        showConfirmButton: false
                    });

                    // ✅ Wait for SweetAlert to close before reload
                    setTimeout(() => location.reload(), 1500);
                })
                .catch(error => {
                    console.error("Toggle error:", error);
                    Swal.fire('Error', error.message || 'Failed to toggle product status', 'error');
                })
                .finally(() => {
                    // ✅ Re-enable buttons after the fetch completes
                    document.querySelectorAll('button').forEach(btn => btn.disabled = false);
                });
        }
    });
}



</script>

</body>
</html>